KEY_BackSpace = 0xff08
KEY_Tab =       0xff09
KEY_Return =    0xff0d
KEY_Escape =    0xff1b
KEY_Insert =    0xff63
KEY_Delete =    0xffff
KEY_Home =      0xff50
KEY_End =       0xff57
KEY_PageUp =    0xff55
KEY_PageDown =  0xff56
KEY_Left =      0xff51
KEY_Up =        0xff52
KEY_Right =     0xff53
KEY_Down =      0xff54
KEY_F1 =        0xffbe
KEY_F2 =        0xffbf
KEY_F3 =        0xffc0
KEY_F4 =        0xffc1
KEY_F5 =        0xffc2
KEY_F6 =        0xffc3
KEY_F7 =        0xffc4
KEY_F8 =        0xffc5
KEY_F9 =        0xffc6
KEY_F10 =       0xffc7
KEY_F11 =       0xffc8
KEY_F12 =       0xffc9
KEY_F13 =       0xFFCA
KEY_F14 =       0xFFCB
KEY_F15 =       0xFFCC
KEY_F16 =       0xFFCD
KEY_F17 =       0xFFCE
KEY_F18 =       0xFFCF
KEY_F19 =       0xFFD0
KEY_F20 =       0xFFD1
KEY_ShiftLeft = 0xffe1
KEY_ShiftRight = 0xffe2
KEY_ControlLeft = 0xffe3
KEY_ControlRight = 0xffe4
KEY_MetaLeft =  0xffe7
KEY_MetaRight = 0xffe8
KEY_AltLeft =   0xffe9
KEY_AltRight =  0xffea

KEY_Scroll_Lock = 0xFF14
KEY_Sys_Req =   0xFF15
KEY_Num_Lock =  0xFF7F
KEY_Caps_Lock = 0xFFE5
KEY_Pause =     0xFF13
KEY_Super_L =   0xFFEB
KEY_Super_R =   0xFFEC
KEY_Hyper_L =   0xFFED
KEY_Hyper_R =   0xFFEE

KEY_KP_0 =      0xFFB0
KEY_KP_1 =      0xFFB1
KEY_KP_2 =      0xFFB2
KEY_KP_3 =      0xFFB3
KEY_KP_4 =      0xFFB4
KEY_KP_5 =      0xFFB5
KEY_KP_6 =      0xFFB6
KEY_KP_7 =      0xFFB7
KEY_KP_8 =      0xFFB8
KEY_KP_9 =      0xFFB9
KEY_KP_Enter =  0xFF8D

# Define a scancode lookup dictionary
SCANCODES = {
    KEY_Escape:     [[0x01], [0x81]],
    '1':       [[0x02], [0x82]], '!':  [[0x2A, 0x02], [0x82, 0xAA]],
    '2':       [[0x03], [0x83]], '@':  [[0x2A, 0x03], [0x83, 0xAA]],
    '3':       [[0x04], [0x84]], '#':  [[0x2A, 0x04], [0x84, 0xAA]],
    '4':       [[0x05], [0x85]], '$':  [[0x2A, 0x05], [0x85, 0xAA]],
    '5':       [[0x06], [0x86]], '%':  [[0x2A, 0x06], [0x86, 0xAA]],
    '6':       [[0x07], [0x87]], '^':  [[0x2A, 0x07], [0x87, 0xAA]],
    '7':       [[0x08], [0x88]], '&':  [[0x2A, 0x08], [0x88, 0xAA]],
    '8':       [[0x09], [0x89]], '*':  [[0x2A, 0x09], [0x89, 0xAA]],
    '9':       [[0x0A], [0x8A]], '(':  [[0x2A, 0x0A], [0x8A, 0xAA]],
    '0':       [[0x0B], [0x8B]], ')':  [[0x2A, 0x0B], [0x8B, 0xAA]],
    '-':       [[0x0C], [0x8C]], '_':  [[0x2A, 0x0C], [0x8C, 0xAA]],
    '=':       [[0x0D], [0x8D]], '+':  [[0x2A, 0x0D], [0x8D, 0xAA]],
    KEY_BackSpace:    [[0x0E], [0x8E]],
    '\b':      [[0x0E], [0x8E]],
    KEY_Tab:     [[0x0F], [0x8F]],
    '\t':      [[0x0F], [0x8F]],
    'q':       [[0x10], [0x90]], 'Q':  [[0x2A, 0x10], [0x90, 0xAA]],
    'w':       [[0x11], [0x91]], 'W':  [[0x2A, 0x11], [0x91, 0xAA]],
    'e':       [[0x12], [0x92]], 'E':  [[0x2A, 0x12], [0x92, 0xAA]],
    'r':       [[0x13], [0x93]], 'R':  [[0x2A, 0x13], [0x93, 0xAA]],
    't':       [[0x14], [0x94]], 'T':  [[0x2A, 0x14], [0x94, 0xAA]],
    'y':       [[0x15], [0x95]], 'Y':  [[0x2A, 0x15], [0x95, 0xAA]],
    'u':       [[0x16], [0x96]], 'U':  [[0x2A, 0x16], [0x96, 0xAA]],
    'i':       [[0x17], [0x97]], 'I':  [[0x2A, 0x17], [0x97, 0xAA]],
    'o':       [[0x18], [0x98]], 'O':  [[0x2A, 0x18], [0x98, 0xAA]],
    'p':       [[0x19], [0x99]], 'P':  [[0x2A, 0x19], [0x99, 0xAA]],
    '[':       [[0x1A], [0x9A]], '{':  [[0x2A, 0x1A], [0x9A, 0xAA]],
    ']':       [[0x1B], [0x9B]], '}':  [[0x2A, 0x1B], [0x9B, 0xAA]],
    KEY_Return:   [[0x1C], [0x9C]],
    '\r':      [[0x1C], [0x9C]],
    '\n':      [[0x1C], [0x9C]],
    KEY_ControlLeft:    [[0x1D], [0x9D]],
    'a':       [[0x1E], [0x9E]], 'A':  [[0x2A, 0x1E], [0x9E, 0xAA]],
    's':       [[0x1F], [0x9F]], 'S':  [[0x2A, 0x1F], [0x9F, 0xAA]],
    'd':       [[0x20], [0xA0]], 'D':  [[0x2A, 0x20], [0xA0, 0xAA]],
    'f':       [[0x21], [0xA1]], 'F':  [[0x2A, 0x21], [0xA1, 0xAA]],
    'g':       [[0x22], [0xA2]], 'G':  [[0x2A, 0x22], [0xA2, 0xAA]],
    'h':       [[0x23], [0xA3]], 'H':  [[0x2A, 0x23], [0xA3, 0xAA]],
    'j':       [[0x24], [0xA4]], 'J':  [[0x2A, 0x24], [0xA4, 0xAA]],
    'k':       [[0x25], [0xA5]], 'K':  [[0x2A, 0x25], [0xA5, 0xAA]],
    'l':       [[0x26], [0xA6]], 'L':  [[0x2A, 0x26], [0xA6, 0xAA]],
    ';':       [[0x27], [0xA7]], ':':  [[0x2A, 0x27], [0xA7, 0xAA]],
    '\'':      [[0x28], [0xA8]], '\"': [[0x2A, 0x28], [0xA8, 0xAA]],
    '`':       [[0x29], [0xA9]], '~':  [[0x2A, 0x29], [0xA9, 0xAA]],
    KEY_ShiftLeft:  [[0x2A], [0xAA]],
    '\\':      [[0x2B], [0xAB]], '|':  [[0x2A, 0x2B], [0xAB, 0xAA]],
    'z':       [[0x2C], [0xAC]], 'Z':  [[0x2A, 0x2C], [0xAC, 0xAA]],
    'x':       [[0x2D], [0xAD]], 'X':  [[0x2A, 0x2D], [0xAD, 0xAA]],
    'c':       [[0x2E], [0xAE]], 'C':  [[0x2A, 0x2E], [0xAE, 0xAA]],
    'v':       [[0x2F], [0xAF]], 'V':  [[0x2A, 0x2F], [0xAF, 0xAA]],
    'b':       [[0x30], [0xB0]], 'B':  [[0x2A, 0x30], [0xB0, 0xAA]],
    'n':       [[0x31], [0xB1]], 'N':  [[0x2A, 0x31], [0xB1, 0xAA]],
    'm':       [[0x32], [0xB2]], 'M':  [[0x2A, 0x32], [0xB2, 0xAA]],
    ',':       [[0x33], [0xB3]], '<':  [[0x2A, 0x33], [0xB3, 0xAA]],
    '.':       [[0x34], [0xB4]], '>':  [[0x2A, 0x34], [0xB4, 0xAA]],
    '/':       [[0x35], [0xB5]], '?':  [[0x2A, 0x35], [0xB5, 0xAA]],
    KEY_ShiftRight:  [[0x36], [0xB6]],
    KEY_Sys_Req:   [[0x37], [0xB7]],
    KEY_AltLeft:     [[0x38], [0xB8]],
    #'SPACE':   [[0x39], [0xB9]],
    ' ':       [[0x39], [0xB9]],
    KEY_Caps_Lock:    [[0x3A], [0xBA]],
    KEY_F1:      [[0x3B], [0xBB]],
    KEY_F2:      [[0x3C], [0xBC]],
    KEY_F3:      [[0x3D], [0xBD]],
    KEY_F4:      [[0x3E], [0xBE]],
    KEY_F5:      [[0x3F], [0xBF]],
    KEY_F6:      [[0x40], [0xC0]],
    KEY_F7:      [[0x41], [0xC1]],
    KEY_F8:      [[0x42], [0xC2]],
    KEY_F9:      [[0x43], [0xC3]],
    KEY_F10:     [[0x44], [0xC4]],
    KEY_F11:     [[0x57], [0xD7]],
    KEY_F12:     [[0x58], [0xD8]],
    KEY_Num_Lock:     [[0x45], [0xC5]],
    KEY_Scroll_Lock:    [[0x46], [0xC6]],
    KEY_Home:    [[0x47], [0xC7]],
    KEY_Up:      [[0x48], [0xC8]],
    KEY_PageUp:    [[0x49], [0xC9]],
    #'MINUS':   [[0x4A], [0xCA]],
    KEY_Left:    [[0x4B], [0xCB]],
    #'CENTER':  [[0x4C], [0xCC]],
    KEY_Right:   [[0x4D], [0xCD]],
    #'PLUS':    [[0x4E], [0xCE]],
    KEY_End:     [[0x4F], [0xCF]],
    KEY_Down:    [[0x50], [0xD0]],
    KEY_PageDown:    [[0x51], [0xD1]],
    KEY_Insert:     [[0x52], [0xD2]],
    KEY_Delete:     [[0x53], [0xD3]],
    #'E_DIV':   [[0xE0, 0x54], [0xE0, 0xD4]],
    #'E_ENTER': [[0xE0, 0x1C], [0xE0, 0x9C]],
    #'E_INS':   [[0xE0, 0x52], [0xE0, 0xD2]],
    #'E_DEL':   [[0xE0, 0x53], [0xE0, 0xD3]],
    #'E_HOME':  [[0xE0, 0x47], [0xE0, 0xC7]],
    #'E_END':   [[0xE0, 0x4F], [0xE0, 0xCF]],
    #'E_PGUP':  [[0xE0, 0x49], [0xE0, 0xC9]],
    #'E_PGDN':  [[0xE0, 0x51], [0xE0, 0xD1]],
    #'E_LEFT':  [[0xE0, 0x4B], [0xE0, 0xCB]],
    #'E_RIGHT': [[0xE0, 0x4D], [0xE0, 0xCD]],
    #'E_UP':    [[0xE0, 0x48], [0xE0, 0xC8]],
    #'E_DOWN':  [[0xE0, 0x50], [0xE0, 0xD0]],
    KEY_AltRight:    [[0x0C, 0x38], [0xC0, 0xB8]],
    KEY_ControlRight:   [[0x0C, 0x1D], [0xC0, 0x9D]],
    KEY_Super_L:    [[0xE0, 0x5B], [0xE0, 0xDB]],
    KEY_Super_R:    [[0xE0, 0x5C], [0xE0, 0xDC]],
    # No scan code for pause key released
    KEY_Pause:   [[0xE1, 0x1D, 0x45, 0xE1, 0x9D, 0xC5], []],
}


def rfbToScancodes_real(key, up):
    if key <= 255: 
        key = chr(key)
        key = key.lower()
    if key in SCANCODES: codes = SCANCODES[key]
    else: return None
    if up: return codes[0]
    else: return codes[1]
    
def rfbToScancodes(key, up):
    ret = rfbToScancodes_real(key, up)
    print "rfbToScancodes(%i, %s) = %s" % (key, str(up), str(ret))
    if ret is not None:
        realret = []
        for r in ret: realret.append(r - 1)
        ret = realret
    return ret

